apply plugin: 'kotlin'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

buildscript {
    ext.libVersionName = "0.4"
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

bintray {
    user = hasProperty('BINTRAY_USER') ? BINTRAY_USER : System.getenv('BINTRAY_USER')
    key = hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : System.getenv('BINTRAY_KEY')
    publications = ['release']
    pkg {
        repo = 'kotlin'
        name = 'measurement'
        licenses = ['Apache-2.0']
        desc = 'Measurement library based on the Swift\'s Measurement structure'
        vcsUrl = 'https://github.com/dawidfiruzek/measurement.git'
        labels = ['jar', 'kotlin']
        publicDownloadNumbers = true
        version {
            name = libVersionName
            released  = new Date()
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            artifact("$buildDir/libs/measurement.jar")
            groupId 'pl.dawidfiruzek'
            artifactId 'measurement'
            version libVersionName
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

task uploadLib(type: GradleBuild) {
    tasks = [
            ':measurement:clean',
            ':measurement:assemble',
            ':measurement:generatePomFileForReleasePublication',
            ':measurement:bintrayUpload'
    ]
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    test
}
